generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String    @unique
  phone           String
  password        String
  isAdmin         Boolean   @default(false)
  bookings        Booking[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  tokenExpiration DateTime?
  resetToken      String?
}

model Room {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  image       String
  isFeatured  Boolean       @default(false)
  description String?
  features    String[]
  rating      Float?
  bookings    BookingRoom[]
  categoryId  String        @db.ObjectId
  category    Category?     @relation(fields: [categoryId], references: [id])
}

model Booking {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  startDate    DateTime
  endDate      DateTime
  username     String
  useremail    String
  childrens    Int           @default(0)
  adults       Int
  userphone    String
  roomtype     String        @default("Delux")
  roomnumbers  Int
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @db.ObjectId
  totalPrice   Float
  status       String        @default("Booked")
  selectedPlan String        @default("EP")
  createdAt    DateTime      @default(now())
  rooms        BookingRoom[]
}

model BookingRoom {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  booking   Booking @relation(fields: [bookingId], references: [id])
  bookingId String  @db.ObjectId
  room      Room    @relation(fields: [roomId], references: [id])
  roomId    String  @db.ObjectId
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  rooms       Room[]
  features    String[]
  description String?
  images      String[] @default([])
  status      Boolean  @default(true)
}

model Plan {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  duration    Int //days 
  features    String[]
  status      Status   @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("plans")
}

enum Status {
  ACTIVE
  INACTIVE
}
